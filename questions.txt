Qual o caminho de construção de uma árvore sintática de análise ascendente?
A construção começa de baixo para cima (botton-up), ou seja, a partir dos tokens, que são os elementos terminais, e vai subindo até chegar na raiz, que é o elemento não terminal.

Cite vantagens da analise ascendente (duas).
É mais eficiente e resolvem melho gramáticas ambíguas, por não se preocuparem com recursão à esquerda.

O que significa LR(1)?
L: Lê o texto de entrada da esquerda para a direita; R: Constroi a derivação da direita para a esquerda; 1: Usa um símbolo de entrada (lookahead)

O que significa lookahead?
É o símbolo de entrada que o analisador léxico analisa e passa para o analisador sintático.

O LR(1) forma uma automato finito determinístico ou não determinístico?
Determinístico

Qual a diferença entre Analisador Sintático Ascendente e LR(1)?
O LR(1) é um tipo de analisador sintático ascendente, mas não é o único.

O que é um item LR(1)?
É um conjunto de uma regra, marcador de posição e um lookahead. Serve para representar todos os estados possíveis e transições entre eles.

O que é um estado?
Situação de análise.

O que é uma alça?
É uma subcadeia de entrada + regra a ser aplicada a fim de reduzir esta subcadeia atual, representando a derivação de uma regra.

O que é a função shift()?
Ela calcula o próximo estado após avançar a entrada e mudar o lookahead.

O que é o núcleo de um estado?
São as regras que o iniciam.

Qual a função do marcador?
Ponto no qual o analisador sintático está.

O que significa a função closure()?
Ela permite com que se verifique as equivalências do núcleo de regras de um estado

O que a função goto() faz?
Ela calcula o próximo estado após a aplicação de uma redução

O que a função reduce() faz?
Ela faz a derivação de uma regra: permite substituir uma subcadeia b por um não terminal A se existir uma regra A -> b
